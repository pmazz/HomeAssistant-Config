#++++++++++++++++++++++++++++++++
#+++++ Time related sensors +++++
#++++++++++++++++++++++++++++++++
- platform: moon  #https://www.home-assistant.io/components/sensor.moon

- platform: season  #https://www.home-assistant.io/integrations/season
  type: astronomical

- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    weekday:
      friendly_name: Weekday
      icon_template: mdi:calendar-today
      entity_id: sensor.time
      value_template: >
        {% set dd = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
        {{ dd[now().weekday()] }}
    sun_next_dawn:
      friendly_name: Prossima Alba
      icon_template: mdi:weather-sunset-up
      value_template: "{{ as_timestamp(state_attr('sun.sun', 'next_dawn')) | timestamp_custom('%H:%M') }}"
    sun_next_setting:
      friendly_name: Prossimo Tramonto
      icon_template: mdi:weather-sunset-down
      value_template: "{{ as_timestamp(state_attr('sun.sun', 'next_setting')) | timestamp_custom('%H:%M') }}"
    maps_api_key:
      icon_template: mdi:alert
      value_template: !secret maps_api_key
    cover_up_start:
      friendly_name: Avvio Serrande Sù
      icon_template: mdi:clock-alert-outline
      value_template: >
        {%- set today_start = as_timestamp(now()) | timestamp_custom('%Y-%m-%d') +' '+ states('input_datetime.event_time_cover_up') %}
        {%- set today_start_ts = as_timestamp(today_start) %}
        {%- if is_state('input_select.event_starttype_cover_up', 'Orario') %}
          {%- set cover_start_ts = today_start_ts %}
        {%- else %}
          {%- set dawn = state_attr('sun.sun', 'next_dawn') %}
          {%- set dawn_ts = as_timestamp(dawn) %}
          {%- set cover_start_ts = dawn_ts + (states('input_number.event_afterdawn_cover_up') | int) * 60 %}
        {%- endif %}
        {%- set cover_start = cover_start_ts | timestamp_custom('%H:%M') %}
        {{- cover_start }}
      attribute_templates:
        date_next_dawn: "{{ as_timestamp(state_attr('sun.sun', 'next_dawn')) | timestamp_custom('%Y-%m-%d') }}"
    cover_down_start:
      friendly_name: Avvio Serrande Giù
      icon_template: mdi:clock-alert-outline
      value_template: >
        {%- set today_start = as_timestamp(now()) | timestamp_custom('%Y-%m-%d') +' '+ states('input_datetime.event_time_cover_down') %}
        {%- set today_start_ts = as_timestamp(today_start) %}
        {%- if is_state('input_select.event_starttype_cover_down', 'Orario') %}
          {%- set cover_start_ts = today_start_ts %}
        {%- else %}
          {%- set dawn = state_attr('sun.sun', 'next_setting') %}
          {%- set dawn_ts = as_timestamp(dawn) %}
          {%- set cover_start_ts = dawn_ts + (states('input_number.event_aftersunset_cover_down') | int) * 60 %}
        {%- endif %}
        {%- set cover_start = cover_start_ts | timestamp_custom('%H:%M') %}
        {{- cover_start }}
      attribute_templates:
        date_next_setting: "{{ as_timestamp(state_attr('sun.sun', 'next_setting')) | timestamp_custom('%Y-%m-%d') }}"

- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    ale_internet_end:
      friendly_name: Orario chiusura
      icon_template: mdi:clock-alert-outline
      value_template: "-"


#++++++++++++++++++++++++++++++++++
#+++++ Home Assistant sensors +++++
#++++++++++++++++++++++++++++++++++
- platform: version  #https://www.home-assistant.io/components/sensor.version
  name: hass_installed_version

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: hass_available_version
  resource: https://version.home-assistant.io/stable.json
  value_template: "{{ value_json.homeassistant.default }}"
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: hassos_available_version
  resource: https://version.home-assistant.io/stable.json
  value_template: "{{ value_json.hassos.rpi3 }}"
  scan_interval: 3600

- platform: command_line
  name: hassos_installed_version
  command: 'curl http://supervisor/host/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"hassos":.data.operating_system}'''
  value_template: "{{ value_json.hassos[7:] }}"

- platform: command_line  #https://www.home-assistant.io/components/sensor.command_line
  name: hass_ip_address
  command: ifconfig | sed -n -e 's/:127\.0\.0\.1 //g' -e 's/:172\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\} //g' -e 's/ *inet addr:\([0-9.]\+\).*/\1/gp'
  scan_interval: 600

- platform: sql  #https://www.home-assistant.io/integrations/sql
  db_url: !secret db_url
  queries:
    - name: hass_db_filesize
      query: "SELECT table_schema 'database', Round(Sum(data_length + index_length) / 1024 / 1024, 1) value FROM information_schema.tables WHERE table_schema='homeassistant' GROUP BY table_schema;"
      column: value
      unit_of_measurement: MB
    - name: hass_db_states_count
      query: "SELECT COUNT(entity_id) AS states_count FROM states"
      column: states_count
    - name: hass_db_events_count
      query: "SELECT COUNT(event_id) AS events_count FROM events"
      column: events_count

- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    hass_sensor_count:
      friendly_name: Sensors
      icon_template: mdi:cogs
      value_template: >-
        {%- set domains = ['sensor', 'binary_sensor'] -%}
        {% set item_nr = namespace(value=0) %}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {% set item_nr.value = item_nr.value + loop.length %}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
        {{item_nr.value}}
    hass_automation_count:
      friendly_name: Automations
      icon_template: mdi:cogs
      value_template: >
        {%- set domains = ['automation'] -%}
        {% set item_nr = namespace(value=0) %}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {% set item_nr.value = item_nr.value + loop.length %}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
        {{item_nr.value}}
    hass_script_count:
      friendly_name: Scripts
      icon_template: mdi:cogs
      value_template: >
        {%- set domains = ['script'] -%}
        {% set item_nr = namespace(value=0) %}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {% set item_nr.value = item_nr.value + loop.length %}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
        {{item_nr.value}}
    hass_switch_count:
      friendly_name: Switches
      icon_template: mdi:cogs
      value_template: >
        {%- set domains = ['switch'] -%}
        {% set item_nr = namespace(value=0) %}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {% set item_nr.value = item_nr.value + loop.length %}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
        {{item_nr.value}}
    hass_lights_count:
      friendly_name: Lights
      icon_template: mdi:cogs
      value_template: >
        {%- set domains = ['light'] -%}
        {% set item_nr = namespace(value=0) %}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {% set item_nr.value = item_nr.value + loop.length %}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
        {{item_nr.value}}
    hass_input_count:
      friendly_name: Inputs
      icon_template: mdi:cogs
      value_template: >
        {%- set domains = ['input_boolean', 'input_datetime', 'input_number', 'input_select', 'input_text'] -%}
        {% set item_nr = namespace(value=0) %}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {% set item_nr.value = item_nr.value + loop.length %}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
        {{item_nr.value}}

- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    hass_config_check_result:
      friendly_name: Check Config Result
      icon_template: mdi:file-check-outline
      value_template: ""
      attribute_templates:
        last_checked: ""
        last_result: ""
        last_error_msg: ""


#++++++++++++++++++++++++++++++++++++++++
#+++++ Home Assistant Addon sensors +++++
#++++++++++++++++++++++++++++++++++++++++
- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_samba
  resource: http://homeassistant:8123/api/hassio/addons/core_samba/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
    # User-Agent: Home Assistant
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_adguard
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_adguard/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_bitwarden
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_bitwarden/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_dasshio
  resource: http://homeassistant:8123/api/hassio/addons/03d23610_dasshio/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_duckdns
  resource: http://homeassistant:8123/api/hassio/addons/core_duckdns/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_nut
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_nut/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_nodered
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_nodered/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_ssh
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_ssh/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_tasmoadmin
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_sonweb/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_motioneye
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_motioneye/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_mariadb
  resource: http://homeassistant:8123/api/hassio/addons/core_mariadb/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_mosquitto
  resource: http://homeassistant:8123/api/hassio/addons/core_mosquitto/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_phpmyadmin
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_phpmyadmin/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: addon_vscode
  resource: http://homeassistant:8123/api/hassio/addons/a0d7b954_vscode/info
  headers:
    Authorization: !secret hass_api_llt
    Content-Type: application/json
  value_template: "{{ value_json.data.state }}"
  json_attributes_path: "$.data"
  json_attributes:
    - name
    - slug
    - version
    - version_latest
  scan_interval: 3600

- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    hass_addon_count:
      friendly_name: Addons
      icon_template: mdi:cogs
      value_template: >
        {{ states.sensor | selectattr("entity_id", ">=", "sensor.addon_") | selectattr("entity_id", "<=", "sensor.addon_z") | list | count }}


#+++++++++++++++++++++++++++++
#+++++ Raspberry sensors +++++
#+++++++++++++++++++++++++++++
- platform: systemmonitor  #https://www.home-assistant.io/components/sensor.systemmonitor
  resources:
    - type: processor_use
    - type: memory_use
    - type: memory_use_percent
    - type: memory_free
    - type: disk_use_percent
      arg: /
    - type: disk_use
      arg: /
    - type: disk_free
      arg: /
    - type: ipv4_address
    - type: last_boot

- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    last_boot_verbose:
      icon_template: mdi:clock
      friendly_name: Last boot
      unit_of_measurement: ago
      value_template: >-
        {%- if not is_state('sensor.last_boot', 'unknown') -%}
          {% set delta_sec = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
          {%- set days = (delta_sec / (60 * 60 * 24)) | int %}
          {%- set delta_sec = (delta_sec % (60 * 60 * 24)) %}
          {%- set hours = (delta_sec / (60 * 60)) | int %}
          {%- set delta_sec = (delta_sec % (60 * 60)) %}
          {%- set minutes = (delta_sec / 60) | int %}
          {%- if days == 0 and hours == 0 and minutes == 0 -%}
            less than a minute
          {%- else -%}
            {%- if days > 0 -%}
              {%- if days == 1 -%}
                1 day
              {%- else -%}
                {{ days }} days
              {%- endif -%}
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if hours == 1 -%}
                1 {% if count == 3 %}h.{% else %}hour{% endif %}
              {%- else -%}
                {{ hours }} {% if count == 3 %}h.{% else %}hours{% endif %}
              {%- endif -%}
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ', ' }}
              {%- endif -%}
              {%- if minutes == 1 -%}
                1 {% if count == 3 %}min.{% else %}minute{% endif %}
              {%- else -%}
                {{ minutes }} {% if count == 3 %}min.{% else %}minutes{% endif %}
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
        {%- else -%}
          N/A
        {%- endif -%}

- platform: time_date  #https://www.home-assistant.io/components/sensor.time_date
  display_options:
    - date
    - time


#+++++++++++++++++++++++
#+++++ NAS sensors +++++
#+++++++++++++++++++++++
- platform: qnap  #https://www.home-assistant.io/components/sensor.qnap
  host: !secret nas_ip
  port: !secret nas_port
  username: !secret nas_admin_user
  password: !secret nas_admin_pwd
  timeout: 20
  monitored_conditions:
    - system_temp #Displays the overall system temperature
    #- cpu_temp #Displays the CPU's temperature (always shown as 'unknown')
    - status #Displays overall system health
    - cpu_usage #Displays the CPU's utilization as a percentage
    - memory_percent_used #Displays the size of used RAM as a percentage of total RAM
    - memory_used #Displays the size of used RAM in GB
    - memory_free #Displays the size of available RAM in GB
    #- network_link_status #Displays whether the network interfaces is up (creates a new entry for each interface)
    #- network_tx #Displays the upload speed of a network interface in MB/s (creates a new entry for each interface)
    #- network_rx #Displays the download speed of a network interface in MB/s (creates a new entry for each interface)
    - drive_smart_status #Displays the S.M.A.R.T. status of the drive (creates a new entry for each drive)
    - drive_temp #Displays the temperature of the drive (creates a new entry for each drive)
    - volume_percentage_used #Displays the used space of the volume as a percentage (creates a new entry for each volume)
    - volume_size_used #Displays the used space of the volume in GB (creates a new entry for each volume)
    - volume_size_free #Displays the available space of the volume in GB (creates a new entry for each volume)
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    nas_attr_model:
      friendly_name: Model
      value_template: "{% if not is_state('sensor.nas_status', 'unknown') %}{{state_attr('sensor.nas_status', 'Model')}}{% else %}N/A{% endif %}"
    nas_attr_uptime:
      icon_template: mdi:clock
      friendly_name: Uptime
      value_template: "{% if not is_state('sensor.nas_status', 'unknown') %}{{state_attr('sensor.nas_status', 'Uptime')}}{% else %}N/A{% endif %}"


#++++++++++++++++++++++++++
#+++++ Router sensors +++++
#++++++++++++++++++++++++++
- platform: fritzbox_netmonitor  #https://www.home-assistant.io/components/sensor.fritzbox_netmonitor
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    fritz_attr_uptime: #Uptime in seconds
      icon_template: mdi:clock
      friendly_name: Uptime
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'uptime') // 60}}{% else %}N/A{% endif %}"
      unit_of_measurement: minutes
    fritz_attr_external_ip: #External ip address
      icon_template: mdi:earth
      friendly_name: External IP
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'external_ip')}}{% else %}N/A{% endif %}"
    fritz_attr_is_linked: #True if the FritzBox is physically linked to the provider
      icon_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') and state_attr('sensor.fritz_netmonitor', 'is_linked') %}mdi:ethernet-cable{% else %}mdi:ethernet-cable-off{% endif %}"
      friendly_name: Linked to provider
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'is_linked')}}{% else %}N/A{% endif %}"
    fritz_attr_is_connected: #True if the FritzBox has established an internet-connection
      icon_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') and state_attr('sensor.fritz_netmonitor', 'is_connected') %}mdi:ethernet-cable{% else %}mdi:ethernet-cable-off{% endif %}"
      friendly_name: Internet connected
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'is_connected')}}{% else %}N/A{% endif %}"
    fritz_attr_sent_mb: #Bytes sent
      icon_template: mdi:call-made
      friendly_name: Sent
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'bytes_sent') // 1024 // 1024}}{% else %}N/A{% endif %}"
      unit_of_measurement: MB
    fritz_attr_received_mb: #Bytes received
      icon_template: mdi:call-received
      friendly_name: Received
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'bytes_received') // 1024 // 1024}}{% else %}N/A{% endif %}"
      unit_of_measurement: MB
    fritz_attr_transmission_rate_up: #Current upstream speed in bytes/s
      icon_template: mdi:upload-network
      friendly_name: Current upstream
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'transmission_rate_up')}}{% else %}N/A{% endif %}"
      unit_of_measurement: bytes/sec
    fritz_attr_transmission_rate_down: #Current downstream speed in bytes/s
      icon_template: mdi:download-network
      friendly_name: Current downstream
      value_template: "{% if not is_state('sensor.fritz_netmonitor', 'unknown') %}{{state_attr('sensor.fritz_netmonitor', 'transmission_rate_down')}}{% else %}N/A{% endif %}"
      unit_of_measurement: bytes/sec


#+++++++++++++++++++++++
#+++++ UPS sensors +++++
#+++++++++++++++++++++++
- platform: nut  #https://www.home-assistant.io/integrations/nut
  name: "Tecnoware UPS"
  resources:
    - battery.charge
    - battery.runtime
    - battery.voltage
    - ups.load
    - ups.status.display
    - input.voltage
    - output.voltage
    - input.frequency


#++++++++++++++++++++++++++++++++++++++
#+++++ Dark Sky sensors (weather) +++++
#++++++++++++++++++++++++++++++++++++++
- platform: darksky  #https://www.home-assistant.io/integrations/darksky
  api_key: !secret darksky_api_key
  latitude: !secret zone_home_lat
  longitude: !secret zone_home_long
  language: it
  forecast:
    - 1
    - 2
    - 3
  monitored_conditions:
    - summary
    - icon
    - temperature
    - temperature_min
    - temperature_max
    - humidity
    - hourly_summary
    - daily_summary
    - precip_probability
    - precip_intensity
    - wind_bearing
    - wind_speed
    - pressure
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    dark_sky_summary_custom:
      friendly_name: Summary
      value_template: "{{ states('sensor.dark_sky_summary') }}"
      entity_picture_template: "{{ '/local/ico/weather/'+ states('sensor.dark_sky_icon') +'.png'}}"
    dark_sky_wind_dir:
      friendly_name: Wind Direction
      value_template: >-
        {% set wind_dir = states('sensor.dark_sky_wind_bearing') %}
        {% if wind_dir | float<=23 %}N [Tramontana]
        {% elif wind_dir | float>338 %}N [Tramontana]
        {% elif 23 < (wind_dir|float) <=68 %}NE [Grecale]
        {% elif 68 < (wind_dir|float) <=113 %}E [Levante]
        {% elif 113 < (wind_dir|float) <=158 %}SE [Scirocco]
        {% elif 158 < (wind_dir|float) <=203 %}S [Mezzogiorno]
        {% elif 203 < (wind_dir|float) <=248 %}SW [Libeccio]
        {% elif 248 < (wind_dir|float) <=293 %}W [Ponente]
        {% elif 293 < (wind_dir|float) <=338 %}NW [Maestrale]
        {%- endif %}
      icon_template: mdi:compass
    dark_sky_wind_dir_1d:
      friendly_name: Wind Direction
      value_template: >-
        {% set wind_dir = states('sensor.dark_sky_wind_bearing_1d') %}
        {% if wind_dir | float<=23 %}N [Tramontana]
        {% elif wind_dir | float>338 %}N [Tramontana]
        {% elif 23 < (wind_dir|float) <=68 %}NE [Grecale]
        {% elif 68 < (wind_dir|float) <=113 %}E [Levante]
        {% elif 113 < (wind_dir|float) <=158 %}SE [Scirocco]
        {% elif 158 < (wind_dir|float) <=203 %}S [Mezzogiorno]
        {% elif 203 < (wind_dir|float) <=248 %}SW [Libeccio]
        {% elif 248 < (wind_dir|float) <=293 %}W [Ponente]
        {% elif 293 < (wind_dir|float) <=338 %}NW [Maestrale]
        {%- endif %}
      icon_template: mdi:compass
    dark_sky_wind_dir_2d:
      friendly_name: Wind Direction
      value_template: >-
        {% set wind_dir = states('sensor.dark_sky_wind_bearing_2d') %}
        {% if wind_dir | float<=23 %}N [Tramontana]
        {% elif wind_dir | float>338 %}N [Tramontana]
        {% elif 23 < (wind_dir|float) <=68 %}NE [Grecale]
        {% elif 68 < (wind_dir|float) <=113 %}E [Levante]
        {% elif 113 < (wind_dir|float) <=158 %}SE [Scirocco]
        {% elif 158 < (wind_dir|float) <=203 %}S [Mezzogiorno]
        {% elif 203 < (wind_dir|float) <=248 %}SW [Libeccio]
        {% elif 248 < (wind_dir|float) <=293 %}W [Ponente]
        {% elif 293 < (wind_dir|float) <=338 %}NW [Maestrale]
        {%- endif %}
      icon_template: mdi:compass
    dark_sky_wind_dir_3d:
      friendly_name: Wind Direction
      value_template: >-
        {% set wind_dir = states('sensor.dark_sky_wind_bearing_3d') %}
        {% if wind_dir | float<=23 %}N [Tramontana]
        {% elif wind_dir | float>338 %}N [Tramontana]
        {% elif 23 < (wind_dir|float) <=68 %}NE [Grecale]
        {% elif 68 < (wind_dir|float) <=113 %}E [Levante]
        {% elif 113 < (wind_dir|float) <=158 %}SE [Scirocco]
        {% elif 158 < (wind_dir|float) <=203 %}S [Mezzogiorno]
        {% elif 203 < (wind_dir|float) <=248 %}SW [Libeccio]
        {% elif 248 < (wind_dir|float) <=293 %}W [Ponente]
        {% elif 293 < (wind_dir|float) <=338 %}NW [Maestrale]
        {%- endif %}
      icon_template: mdi:compass
    dark_sky_forecast_1d:
      friendly_name_template: "{{ (as_timestamp(now()) + (1 * 86400)) | timestamp_custom('%A %d') }}"
      value_template: "{{ states('sensor.dark_sky_daily_low_temperature_1d') | round(0) }}° ~ {{ states('sensor.dark_sky_daily_high_temperature_1d') | round(0) }}° | {{ states('sensor.dark_sky_precip_probability_1d') | round(0) }}%"
      entity_picture_template: "{{ '/local/ico/weather/'+ states('sensor.dark_sky_icon_1d') +'.png'}}"
    dark_sky_forecast_2d:
      friendly_name_template: "{{ (as_timestamp(now()) + (2 * 86400)) | timestamp_custom('%A %d') }}"
      value_template: "{{ states('sensor.dark_sky_daily_low_temperature_2d') | round(0) }}° ~ {{ states('sensor.dark_sky_daily_high_temperature_2d') | round(0) }}° | {{ states('sensor.dark_sky_precip_probability_2d') | round(0) }}%"
      entity_picture_template: "{{ '/local/ico/weather/'+ states('sensor.dark_sky_icon_2d') +'.png'}}"
    dark_sky_forecast_3d:
      friendly_name_template: "{{ (as_timestamp(now()) + (3 * 86400)) | timestamp_custom('%A %d') }}"
      value_template: "{{ states('sensor.dark_sky_daily_low_temperature_3d') | round(0) }}° ~ {{ states('sensor.dark_sky_daily_high_temperature_3d') | round(0) }}° | {{ states('sensor.dark_sky_precip_probability_3d') | round(0) }}%"
      entity_picture_template: "{{ '/local/ico/weather/'+ states('sensor.dark_sky_icon_3d') +'.png'}}"
    rain_last_occurred:
      friendly_name: Last rainy day
      value_template: "{{ states('input_datetime.rain_last_occurred').split(' ')[0] }}"
      icon_template: mdi:weather-rainy


#++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ Tracking & telemetry sensors (Cell. Paolo) +++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_paolo_lastupdate
  state_topic: "mobile/cell-paolo"
  value_template: "{{ value_json.dt | timestamp_local }}"
  icon: mdi:update
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_paolo_battery
  unit_of_measurement: "%"
  device_class: battery
  state_topic: "mobile/cell-paolo"
  value_template: "{{ value_json.battery }}"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_paolo_charging
  state_topic: "mobile/cell-paolo"
  value_template: "{{ value_json.charge }}"
  icon: mdi:power-plug-off
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_paolo_trigger
  state_topic: "mobile/cell-paolo"
  value_template: "{% if value_json.trigger %}{{value_json.trigger}}{% else %}unknown{% endif %}"
  icon: mdi:clock-start
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    cell_paolo_lat:
     icon_template: mdi:map-marker
     friendly_name: Latitude
     value_template: "{% if not is_state('device_tracker.cell_paolo', 'unknown') %}{{state_attr('device_tracker.cell_paolo', 'latitude')}}{% else %}N/A{% endif %}"
    cell_paolo_long:
     icon_template: mdi:map-marker
     friendly_name: Longitude
     value_template: "{% if not is_state('device_tracker.cell_paolo', 'unknown') %}{{state_attr('device_tracker.cell_paolo', 'longitude')}}{% else %}N/A{% endif %}"
    cell_paolo_latlong:
      icon_template: mdi:map-marker
      friendly_name: Lat./Long.
      value_template: "{% if not is_state('device_tracker.cell_paolo', 'unknown') %}{{state_attr('device_tracker.cell_paolo', 'latitude')}},{{state_attr('device_tracker.cell_paolo', 'longitude')}}{% else %}N/A{% endif %}"
    cell_paolo_accuracy:
      icon_template: mdi:map-marker-radius
      friendly_name: GPS accuracy
      unit_of_measurement: mt
      value_template: "{% if not is_state('device_tracker.cell_paolo', 'unknown') %}{{state_attr('device_tracker.cell_paolo', 'gps_accuracy')}}{% else %}N/A{% endif %}"
    cell_paolo_address:
      friendly_name: Address
      icon_template: mdi:compass-outline
      value_template: N/A
    cell_paolo_address_confidence:
      friendly_name: Confidence
      icon_template: mdi:compass-outline
      value_template: N/A
    cell_paolo_distance_home:
      friendly_name: Distanza da casa
      icon_template: mdi:math-compass
      value_template: "{{ distance('device_tracker.cell_paolo', 'zone.home') | round(0) }}"
      unit_of_measurement: Km
    cell_paolo_distance_silvia:
      friendly_name: Distanza da Silvia
      icon_template: mdi:ruler-square-compass
      value_template: "{{ distance('device_tracker.cell_paolo', 'device_tracker.cell_silvia') | round(0) }}"
      unit_of_measurement: Km
    zone_paolo_last_changed:
      friendly_name: Current zone since
      icon_template: mdi:map-clock-outline
      value_template: "{{ states('input_datetime.zone_paolo_last_changed') }}"


#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ Tracking & telemetry sensors (Cell. Silvia) +++++
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_silvia_lastupdate
  state_topic: "mobile/cell-silvia"
  value_template: "{{ value_json.dt | timestamp_local }}"
  icon: mdi:update
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_silvia_battery
  unit_of_measurement: "%"
  device_class: battery
  state_topic: "mobile/cell-silvia"
  value_template: "{{ value_json.battery }}"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_silvia_charging
  state_topic: "mobile/cell-silvia"
  value_template: "{{ value_json.charge }}"
  icon: mdi:power-plug-off
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: cell_silvia_trigger
  state_topic: "mobile/cell-silvia"
  value_template: "{% if value_json.trigger %}{{value_json.trigger}}{% else %}unknown{% endif %}"
  icon: mdi:clock-start
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    cell_silvia_lat:
     icon_template: mdi:map-marker
     friendly_name: Latitude
     value_template: "{% if not is_state('device_tracker.cell_silvia', 'unknown') %}{{state_attr('device_tracker.cell_silvia', 'latitude')}}{% else %}N/A{% endif %}"
    cell_silvia_long:
     icon_template: mdi:map-marker
     friendly_name: Longitude
     value_template: "{% if not is_state('device_tracker.cell_silvia', 'unknown') %}{{state_attr('device_tracker.cell_silvia', 'longitude')}}{% else %}N/A{% endif %}"
    cell_silvia_latlong:
      icon_template: mdi:map-marker
      friendly_name: Lat./Long.
      value_template: "{% if not is_state('device_tracker.cell_silvia', 'unknown') %}{{state_attr('device_tracker.cell_silvia', 'latitude')}},{{state_attr('device_tracker.cell_silvia', 'longitude')}}{% else %}N/A{% endif %}"
    cell_silvia_accuracy:
      icon_template: mdi:map-marker-radius
      friendly_name: GPS accuracy
      unit_of_measurement: mt
      value_template: "{% if not is_state('device_tracker.cell_silvia', 'unknown') %}{{state_attr('device_tracker.cell_silvia', 'gps_accuracy')}}{% else %}N/A{% endif %}"
    cell_silvia_address:
      friendly_name: Address
      icon_template: mdi:compass-outline
      value_template: N/A
    cell_silvia_address_confidence:
      friendly_name: Confidence
      icon_template: mdi:compass-outline
      value_template: N/A
    cell_silvia_distance_home:
      friendly_name: Distanza da casa
      icon_template: mdi:math-compass
      value_template: "{{ distance('device_tracker.cell_silvia', 'zone.home') | round(0) }}"
      unit_of_measurement: Km
    cell_silvia_distance_paolo:
      friendly_name: Distanza da Paolo
      icon_template: mdi:ruler-square-compass
      value_template: "{{ distance('device_tracker.cell_silvia', 'device_tracker.cell_paolo') | round(0) }}"
      unit_of_measurement: Km
    zone_silvia_last_changed:
      friendly_name: Current zone since
      icon_template: mdi:map-clock-outline
      value_template: "{{ states('input_datetime.zone_silvia_last_changed') }}"


#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ Tracking & telemetry sensors (Tablet Paolo) +++++
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_paolo_lastupdate
  state_topic: "mobile/tablet-paolo"
  value_template: "{{ value_json.dt | timestamp_local }}"
  icon: mdi:update
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_paolo_battery
  unit_of_measurement: "%"
  device_class: battery
  state_topic: "mobile/tablet-paolo"
  value_template: "{{ value_json.battery }}"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_paolo_charging
  state_topic: "mobile/tablet-paolo"
  value_template: "{{ value_json.charge }}"
  icon: mdi:power-plug-off
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_paolo_trigger
  state_topic: "mobile/tablet-paolo"
  value_template: "{% if value_json.trigger %}{{value_json.trigger}}{% else %}unknown{% endif %}"
  icon: mdi:clock-start
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    tablet_paolo_lat:
     icon_template: mdi:map-marker
     friendly_name: Latitude
     value_template: "{% if not is_state('device_tracker.tablet_paolo', 'unknown') %}{{state_attr('device_tracker.tablet_paolo', 'latitude')}}{% else %}N/A{% endif %}"
    tablet_paolo_long:
     icon_template: mdi:map-marker
     friendly_name: Longitude
     value_template: "{% if not is_state('device_tracker.tablet_paolo', 'unknown') %}{{state_attr('device_tracker.tablet_paolo', 'longitude')}}{% else %}N/A{% endif %}"
    tablet_paolo_latlong:
      icon_template: mdi:map-marker
      friendly_name: Lat./Long.
      value_template: "{% if not is_state('device_tracker.tablet_paolo', 'unknown') %}{{state_attr('device_tracker.tablet_paolo', 'latitude')}},{{state_attr('device_tracker.tablet_paolo', 'longitude')}}{% else %}N/A{% endif %}"
    tablet_paolo_accuracy:
      icon_template: mdi:map-marker-radius
      friendly_name: GPS accuracy
      unit_of_measurement: mt
      value_template: "{% if not is_state('device_tracker.tablet_paolo', 'unknown') %}{{state_attr('device_tracker.tablet_paolo', 'gps_accuracy')}}{% else %}N/A{% endif %}"
    tablet_paolo_address:
      friendly_name: Address
      icon_template: mdi:compass-outline
      value_template: N/A
    tablet_paolo_address_confidence:
      friendly_name: Confidence
      icon_template: mdi:compass-outline
      value_template: N/A


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ Tracking & telemetry sensors (Tablet Silvia) +++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_silvia_lastupdate
  state_topic: "mobile/tablet-silvia"
  value_template: "{{ value_json.dt | timestamp_local }}"
  icon: mdi:update
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_silvia_battery
  unit_of_measurement: "%"
  device_class: battery
  state_topic: "mobile/tablet-silvia"
  value_template: "{{ value_json.battery }}"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_silvia_charging
  state_topic: "mobile/tablet-silvia"
  value_template: "{{ value_json.charge }}"
  icon: mdi:power-plug-off
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: tablet_silvia_trigger
  state_topic: "mobile/tablet-silvia"
  value_template: "{% if value_json.trigger %}{{value_json.trigger}}{% else %}unknown{% endif %}"
  icon: mdi:clock-start
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    tablet_silvia_lat:
     icon_template: mdi:map-marker
     friendly_name: Latitude
     value_template: "{% if not is_state('device_tracker.tablet_silvia', 'unknown') %}{{state_attr('device_tracker.tablet_silvia', 'latitude')}}{% else %}N/A{% endif %}"
    tablet_silvia_long:
     icon_template: mdi:map-marker
     friendly_name: Longitude
     value_template: "{% if not is_state('device_tracker.tablet_silvia', 'unknown') %}{{state_attr('device_tracker.tablet_silvia', 'longitude')}}{% else %}N/A{% endif %}"
    tablet_silvia_latlong:
      icon_template: mdi:map-marker
      friendly_name: Lat./Long.
      value_template: "{% if not is_state('device_tracker.tablet_silvia', 'unknown') %}{{state_attr('device_tracker.tablet_silvia', 'latitude')}},{{state_attr('device_tracker.tablet_silvia', 'longitude')}}{% else %}N/A{% endif %}"
    tablet_silvia_accuracy:
      icon_template: mdi:map-marker-radius
      friendly_name: GPS accuracy
      unit_of_measurement: mt
      value_template: "{% if not is_state('device_tracker.tablet_silvia', 'unknown') %}{{state_attr('device_tracker.tablet_silvia', 'gps_accuracy')}}{% else %}N/A{% endif %}"
    tablet_silvia_address:
      friendly_name: Address
      icon_template: mdi:compass-outline
      value_template: N/A
    tablet_silvia_address_confidence:
      friendly_name: Confidence
      icon_template: mdi:compass-outline
      value_template: N/A


#+++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ PZEM-004T sensors (Energy consumption) ++++
#+++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_voltage
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Voltage }}"
  unit_of_measurement: "V"
  icon: mdi:flash
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_current
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Current }}"
  unit_of_measurement: "A"
  icon: mdi:power-socket
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_power
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Power }}"
  unit_of_measurement: "W"
  icon: mdi:power-plug
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_power_factor
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Factor }}"
  icon: mdi:percent
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_energy_today
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Today }}"
  unit_of_measurement: "kWh"
  icon: mdi:calendar-today
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_energy_yesterday
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Yesterday }}"
  unit_of_measurement: "kWh"
  icon: mdi:calendar-today
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_energy_total
  state_topic: "home/pzem_004t/tele/SENSOR"
  value_template: "{{ value_json['ENERGY'].Total }}"
  unit_of_measurement: "kWh"
  icon: mdi:calendar-blank
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_wifi_rssi
  state_topic: "home/pzem_004t/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: pzem_boot_count
  state_topic: "home/pzem_004t/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    pzem_energy_entire_day:
      icon_template: mdi:calendar-today
      friendly_name: Consumi Giornata
      value_template: "0"


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ Tasmota telemetry sensors (Switches & Plugs) +++++
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_basic_1_wifi_rssi
  state_topic: "home/sonoff_basic_1/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_basic_1_boot_count
  state_topic: "home/sonoff_basic_1/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_basic_2_wifi_rssi
  state_topic: "home/sonoff_basic_2/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_basic_2_boot_count
  state_topic: "home/sonoff_basic_2/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_basic_3_wifi_rssi
  state_topic: "home/sonoff_basic_3/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_basic_3_boot_count
  state_topic: "home/sonoff_basic_3/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_dual_1_wifi_rssi
  state_topic: "home/sonoff_dual_1/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_dual_1_boot_count
  state_topic: "home/sonoff_dual_1/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_4ch_1_wifi_rssi
  state_topic: "home/sonoff_4ch_1/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_4ch_1_boot_count
  state_topic: "home/sonoff_4ch_1/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_1_wifi_rssi
  state_topic: "home/smart_plug_1/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_1_boot_count
  state_topic: "home/smart_plug_1/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_2_wifi_rssi
  state_topic: "home/smart_plug_2/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_2_boot_count
  state_topic: "home/smart_plug_2/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_3_wifi_rssi
  state_topic: "home/smart_plug_3/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_3_boot_count
  state_topic: "home/smart_plug_3/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_4_wifi_rssi
  state_topic: "home/smart_plug_4/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_4_boot_count
  state_topic: "home/smart_plug_4/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_5_wifi_rssi
  state_topic: "home/smart_plug_5/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_5_boot_count
  state_topic: "home/smart_plug_5/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_6_wifi_rssi
  state_topic: "home/smart_plug_6/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_6_boot_count
  state_topic: "home/smart_plug_6/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_7_wifi_rssi
  state_topic: "home/smart_plug_7/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_7_boot_count
  state_topic: "home/smart_plug_7/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_8_wifi_rssi
  state_topic: "home/smart_plug_8/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: smart_plug_8_boot_count
  state_topic: "home/smart_plug_8/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_rele_1_wifi_rssi
  state_topic: "home/sonoff_re5v1c_1/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  icon: mdi:wifi
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: sonoff_rele_1_boot_count
  state_topic: "home/sonoff_re5v1c_1/stat/STATUS1"
  value_template: "{{ value_json['StatusPRM'].BootCount }}"
  icon: mdi:restart-alert


#++++++++++++++++++++++++++++++++++++++
#+++++ MQTT Broker system sensors +++++
#++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_clients_total
  state_topic: "$SYS/broker/clients/total"
  icon: mdi:devices
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_bytes_received
  state_topic: "$SYS/broker/bytes/received"
  value_template: "{{ '{:,}'.format(value | int) }}"
  icon: mdi:cloud-sync-outline
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_bytes_sent
  state_topic: "$SYS/broker/bytes/sent"
  value_template: "{{ '{:,}'.format(value | int) }}"
  icon: mdi:cloud-sync-outline
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_messages_received
  state_topic: "$SYS/broker/messages/received"
  value_template: "{{ '{:,}'.format(value | int) }}"
  icon: mdi:message-text
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_messages_sent
  state_topic: "$SYS/broker/messages/sent"
  value_template: "{{ '{:,}'.format(value | int) }}"
  icon: mdi:message-text
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_messages_retained
  state_topic: "$SYS/broker/retained messages/count"
  icon: mdi:message-text
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_version
  state_topic: "$SYS/broker/version"
  icon: mdi:server-network
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: mqtt_broker_uptime
  state_topic: "$SYS/broker/uptime"
  unit_of_measurement: seconds
  value_template: "{{ value.split(' ')[0] }}"
  icon: mdi:clock
- platform: template  #https://www.home-assistant.io/components/sensor.template
  sensors:
    mqtt_broker_uptime_verbose:
      icon_template: mdi:clock
      friendly_name: Broker Uptime
      unit_of_measurement: ago
      value_template: >-
        {% set uptime_sec = states('sensor.mqtt_broker_uptime').split(" ")[0]|int %}
        {%- set days = (uptime_sec / (60 * 60 * 24)) | int %}
        {%- set uptime_sec = (uptime_sec % (60 * 60 * 24)) %}
        {%- set hours = (uptime_sec / (60 * 60)) | int %}
        {%- set uptime_sec = (uptime_sec % (60 * 60)) %}
        {%- set minutes = (uptime_sec / 60) | int %}
        {%- if days == 0 and hours == 0 and minutes == 0 -%}
          less than a minute
        {%- else -%}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 {% if count == 3 %}h.{% else %}hour{% endif %}
            {%- else -%}
              {{ hours }} {% if count == 3 %}h.{% else %}hours{% endif %}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if days > 0 or hours > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if minutes == 1 -%}
              1 {% if count == 3 %}min.{% else %}minute{% endif %}
            {%- else -%}
              {{ minutes }} {% if count == 3 %}min.{% else %}minutes{% endif %}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}


#+++++++++++++++++++++++++++++++++++++++++++++
#+++++ Zigbee2Tasmota open/close sensors +++++
#+++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_1_battery
  state_topic: "home/zigbee_gate_1/8450/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_openclose_1_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_1_linkquality
  state_topic: "home/zigbee_gate_1/8450/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_openclose_1_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_2_battery
  state_topic: "home/zigbee_gate_1/5345/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_openclose_2_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_2_linkquality
  state_topic: "home/zigbee_gate_1/5345/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_openclose_2_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_3_battery
  state_topic: "home/zigbee_gate_1/7692/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_openclose_3_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_3_linkquality
  state_topic: "home/zigbee_gate_1/7692/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_openclose_3_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_4_battery
  state_topic: "home/zigbee_gate_1/EF3E/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_openclose_4_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_openclose_4_linkquality
  state_topic: "home/zigbee_gate_1/EF3E/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_openclose_4_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"


#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
#+++++ Zigbee2Tasmota temperature/humidity sensors +++++
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_1
  state_topic: "home/zigbee_gate_1/79AA/tele/SENSOR"
  value_template: >
    {% if 'Temperature' in value_json %}
      {{ value_json.Temperature }}
    {% else %}
      {{ states('sensor.zb_temperature_1') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: temperature
  unit_of_measurement: "°C"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_1_humidity
  state_topic: "home/zigbee_gate_1/79AA/tele/SENSOR"
  value_template: >
    {% if 'Humidity' in value_json %}
      {{ value_json.Humidity }}
    {% else %}
      {{ states('sensor.zb_temperature_1_humidity') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: humidity
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_1_pressure
  state_topic: "home/zigbee_gate_1/79AA/tele/SENSOR"
  value_template: >
    {% if 'Pressure' in value_json %}
      {{ value_json.Pressure }}
    {% else %}
      {{ states('sensor.zb_temperature_1_pressure') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: pressure
  unit_of_measurement: "mbar"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_1_battery
  state_topic: "home/zigbee_gate_1/79AA/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_temperature_1_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_1_linkquality
  state_topic: "home/zigbee_gate_1/79AA/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_temperature_1_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_2
  state_topic: "home/zigbee_gate_1/7E8F/tele/SENSOR"
  value_template: >
    {% if 'Temperature' in value_json %}
      {{ value_json.Temperature }}
    {% else %}
      {{ states('sensor.zb_temperature_2') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: temperature
  unit_of_measurement: "°C"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_2_humidity
  state_topic: "home/zigbee_gate_1/7E8F/tele/SENSOR"
  value_template: >
    {% if 'Humidity' in value_json %}
      {{ value_json.Humidity }}
    {% else %}
      {{ states('sensor.zb_temperature_2_humidity') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: humidity
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_2_pressure
  state_topic: "home/zigbee_gate_1/7E8F/tele/SENSOR"
  value_template: >
    {% if 'Pressure' in value_json %}
      {{ value_json.Pressure }}
    {% else %}
      {{ states('sensor.zb_temperature_2_pressure') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: pressure
  unit_of_measurement: "mbar"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_2_battery
  state_topic: "home/zigbee_gate_1/7E8F/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_temperature_2_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_2_linkquality
  state_topic: "home/zigbee_gate_1/7E8F/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_temperature_2_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_3
  state_topic: "home/zigbee_gate_1/79B4/tele/SENSOR"
  value_template: >
    {% if 'Temperature' in value_json %}
      {{ value_json.Temperature }}
    {% else %}
      {{ states('sensor.zb_temperature_3') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: temperature
  unit_of_measurement: "°C"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_3_humidity
  state_topic: "home/zigbee_gate_1/79B4/tele/SENSOR"
  value_template: >
    {% if 'Humidity' in value_json %}
      {{ value_json.Humidity }}
    {% else %}
      {{ states('sensor.zb_temperature_3_humidity') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: humidity
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_3_pressure
  state_topic: "home/zigbee_gate_1/79B4/tele/SENSOR"
  value_template: >
    {% if 'Pressure' in value_json %}
      {{ value_json.Pressure }}
    {% else %}
      {{ states('sensor.zb_temperature_3_pressure') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: pressure
  unit_of_measurement: "mbar"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_3_battery
  state_topic: "home/zigbee_gate_1/79B4/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_temperature_3_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_temperature_3_linkquality
  state_topic: "home/zigbee_gate_1/79B4/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_temperature_3_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"


#+++++++++++++++++++++++++++++++++++++++++
#+++++ Zigbee2Tasmota motion sensors +++++
#+++++++++++++++++++++++++++++++++++++++++
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_motion_1_battery
  state_topic: "home/zigbee_gate_1/668A/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_motion_1_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_motion_1_linkquality
  state_topic: "home/zigbee_gate_1/668A/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_motion_1_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"

- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_motion_2_battery
  state_topic: "home/zigbee_gate_1/A283/tele/SENSOR"
  value_template: >
    {% if 'BatteryPercentage' in value_json %}
      {{ value_json.BatteryPercentage }}
    {% else %}
      {{ states('sensor.zb_motion_2_battery') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"
  device_class: battery
  unit_of_measurement: "%"
- platform: mqtt  #https://www.home-assistant.io/components/sensor.mqtt
  name: zb_motion_2_linkquality
  state_topic: "home/zigbee_gate_1/A283/tele/SENSOR"
  value_template: >
    {% if 'LinkQuality' in value_json %}
      {{ value_json.LinkQuality }}
    {% else %}
      {{ states('sensor.zb_motion_2_linkquality') }}
    {% endif %}
  availability_topic: "home/zigbee_gate_1/tele/LWT"
  payload_available: "Online"
  payload_not_available: "Offline"


#++++++++++++++++++++++++++++
#+++++ Calendar sensors +++++
#++++++++++++++++++++++++++++
- platform: ics  #https://github.com/KoljaWindeler/ics
  id: 1
  url: http://homeassistant:8123/local/calendars/contarina.ics
  name: Secco
  startswith: Secco
  timeformat: "%A, %d-%m-%Y"
  show_remaining: false
- platform: ics  #https://github.com/KoljaWindeler/ics
  id: 2
  url: http://homeassistant:8123/local/calendars/contarina.ics
  name: Umido
  startswith: Umido
  timeformat: "%A, %d-%m-%Y"
  show_remaining: false
- platform: ics  #https://github.com/KoljaWindeler/ics
  id: 3
  url: http://homeassistant:8123/local/calendars/contarina.ics
  name: Plastica
  startswith: Plastica
  timeformat: "%A, %d-%m-%Y"
  show_remaining: false
- platform: ics  #https://github.com/KoljaWindeler/ics
  id: 4
  url: http://homeassistant:8123/local/calendars/contarina.ics
  name: Carta
  startswith: Carta
  timeformat: "%A, %d-%m-%Y"
  show_remaining: false
- platform: ics  #https://github.com/KoljaWindeler/ics
  id: 5
  url: http://homeassistant:8123/local/calendars/contarina.ics
  name: Vegetale
  startswith: Vegetale
  timeformat: "%A, %d-%m-%Y"
  show_remaining: false


#++++++++++++++++++++++++++
#+++++ GitHub sensors +++++
#++++++++++++++++++++++++++
- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: github_1
  resource: https://api.github.com/repos/pmazz/HomeAssistant-Config
  value_template: "{{ value_json.name }}"
  json_attributes:
    - id
    - html_url
    - created_at
    - updated_at
    - pushed_at
    - stargazers_count
    - forks_count
    - open_issues_count
    - subscribers_count
  scan_interval: 3600
- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: github_1_commits
  resource: https://api.github.com/repos/pmazz/HomeAssistant-Config/contributors
  value_template: "{{ value_json|sum(attribute='contributions') }}"
  scan_interval: 3600

- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: github_2
  resource: https://api.github.com/repos/pmazz/ps_hassio_entities
  value_template: "{{ value_json.name }}"
  json_attributes:
    - id
    - html_url
    - created_at
    - updated_at
    - pushed_at
    - stargazers_count
    - forks_count
    - open_issues_count
    - subscribers_count
  scan_interval: 3600
- platform: rest  #https://www.home-assistant.io/integrations/rest
  name: github_2_commits
  resource: https://api.github.com/repos/pmazz/ps_hassio_entities/contributors
  value_template: "{{ value_json|sum(attribute='contributions') }}"
  scan_interval: 3600
